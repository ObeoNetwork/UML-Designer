--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _xUmjgA-GEeWqyPO4VW22gA,_MWdYgIBGEeS4X6G9cD21hw,_j5GvUAUgEeWu0eW6YYFvkg,_he-_gIBIEeS4X6G9cD21hw,_4eO8kBAeEeWa5c8q1ijOWg,_bKL_sH-PEeS4X6G9cD21hw,_X-rQgH-QEeS4X6G9cD21hw,_p-v3gMyvEeSmqoI7c5i_uw,_vOHMMM1bEeSHkpcdtO-QuQ
Element-Name: CreateNewRelationshipsBindingWithPaletteToolInClassDiagram
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _qB940M2aEeSHkpcdtO-QuQ
Runtime-Version: 1.5.5.201503020312
Save-Time: 4/15/15 2:10 PM
Testcase-Type: ecl
Verifications: _y7NfEM4WEeSHkpcdtO-QuQ

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Create a New semantic element in class diagram: Binding
Test:
- with Palette tool : Bindings create new element between Class1 and Class2 and a new association class.
- specify the binding association from the formal to the actual type use also the direct edit tool
- specify the binding with an invalid value

Result:
- new connection appears in diagram
- new connection appear in model explorer
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Rename Class1 to Class1<T> with direct edit
with [get-editor "test Class Diagram"] {
    maximize
    with [get-diagram -index 1] {
        with [get-edit-part -name "test Class Diagram" | get-edit-part -name Class1] {
            mouse-move 97 19 button1 -height 100 -width 120
            mouse-press 97 19 button1 -height 100 -width 120
            mouse-release 97 19 button1 524288 -height 100 -width 120
        }
        key-type F2
        get-edit-part -name "test Class Diagram" | get-edit-part -name Class1 | get-edit-part 
            -className DNodeListNameEditPart | activate-direct-edit
    }
    with [get-editbox] {
        key-type Right
        set-text "Class1 <T>"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
        get-edit-part -name "test Class Diagram" | mouse-move 1152 511 -height 562 -width 1153
    }
}

// Create new binding from Class2 to Class1<T>
with [get-editor "test Class Diagram" | get-palette | get-palette-entry Binding] {
    mouse-move 53 9 button1 -height 23 -width 135
    mouse-press 53 9 button1 -height 23 -width 135
    mouse-release 53 9 button1 524288 -height 23 -width 135
}
with [get-editor "test Class Diagram" | get-diagram -index 1 | get-edit-part -name "test Class Diagram"] {
    mouse-move 285 352 -height 562 -width 1153
    with [get-edit-part -name Class2 | get-edit-part -className DNodeListViewNodeListCompartment2EditPart] {
        mouse-move 48 29 button1 -height 71 -width 116
        mouse-press 48 29 button1 -height 71 -width 116
        mouse-release 48 29 button1 524288 -height 71 -width 116
    }
    mouse-move 197 247 -height 562 -width 1153
    with [get-edit-part -name "Class1 <T>" | get-edit-part -className DNodeListViewNodeListCompartment2EditPart] {
        mouse-move 34 11 button1 -height 71 -width 116
        mouse-press 34 11 button1 -height 71 -width 116
        mouse-release 34 11 button1 524288 -height 71 -width 116
        
    }
}
// Check Graphical element is created
with [get-editor "test Class Diagram" | get-diagram -index 1 | get-edit-part -name "test Class Diagram" | get-edit-part 
    -name "Class1 <T>" | get-target-connection 0] {
    get-edit-part -className "" | get-property "getFigure().getText()" | equals "T->?" | verify-true
    
}

// Check Source and target
with [get-editor "test Class Diagram" | get-diagram -index 1 | get-edit-part -name "test Class Diagram" | get-edit-part 
    -name "Class1 <T>" | get-target-connection 0] {
    get-property "getSource().getPrimaryFigure().getLabelFigure().getText()" | equals "Class2" | verify-true
    get-property "getTarget().getPrimaryFigure().getLabelFigure().getText()" | equals "Class1 <T>" | verify-true
}

// Check style connection style between Class1 and Class2
with [get-editor "test Class Diagram" | get-diagram -index 1 | get-edit-part -name "test Class Diagram" | get-edit-part 
    -name "Class1 <T>" | get-target-connection 0] {
     get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals dash | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals straight | verify-true
    // get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    // get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
}

//Create new Class: Class3
with [get-editor "test Class Diagram"] {
   with [get-palette] {
        with [get-palette-entry Class] {
            mouse-move 45 7 button1 -height 23 -width 135
            mouse-press 45 7 button1 -height 23 -width 135
            mouse-release 45 7 button1 524288 -height 23 -width 135
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "test Class Diagram"] {
        mouse-move 443 208 button1 -height 562 -width 1153
        mouse-press 443 208 button1 -height 562 -width 1153
        mouse-move 444 208 -mask 524288 -height 562 -width 1153
        mouse-drag 444 208 button1 524288 -height 562 -width 1153
        mouse-release 444 208 button1 524288 -height 562 -width 1153
    }
}

// Specify the binding association from the formal to the actual type use also the direct edit tool: 
with [get-editor "test Class Diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "test Class Diagram"] {
            with [get-edit-part -name "Class1 <T>" | get-target-connection 0 | get-edit-part -className ""] {
                mouse-move 15 8 button1 -height 16 -width 41
                mouse-press 15 8 button1 -height 16 -width 41
                mouse-release 15 8 button1 524288 -height 16 -width 41
            }
        }
        key-type F2
        get-edit-part -name "test Class Diagram" | get-edit-part -name "Class1 <T>" | get-target-connection 0 
            | get-edit-part -className "" | activate-direct-edit
    }
    with [get-editbox] {
        set-text "T->Class3"
        key-type Enter
    }
}
// Check it is take into account
get-editor "test Class Diagram" | get-diagram -index 1 | get-edit-part -name "test Class Diagram" | get-edit-part 
-name "Class1 <T>" | get-target-connection 0 | get-edit-part -className "" | get-property "getFigure().getText()" 
| equals "T->Class3" | verify-true
    
// Specify the binding association with invalid value
with [get-editor "test Class Diagram"] {
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
        with [get-edit-part -name "test Class Diagram" | get-edit-part -name "Class1 <T>" | get-target-connection 0 
            | get-edit-part -className ""] {
            mouse-move 37 6 button1 -height 16 -width 68
            mouse-press 37 6 button1 -height 16 -width 68
            mouse-release 37 6 button1 524288 -height 16 -width 68
        }
        key-type F2
    }
    with [get-editbox] {
        set-text "T->Invalid"
        key-type Enter
    }
    with [get-diagram -index 1] {
        commit-direct-edit
        key-type Enter
    }
}
// Check it is not take into account
get-editor "test Class Diagram" | get-diagram -index 1 | get-edit-part -name "test Class Diagram" | get-edit-part 
    -name "Class1 <T>" | get-target-connection 0 | get-edit-part -className "" | get-property "getFigure().getText()" 
    | equals "T->Class3" | verify-true
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
