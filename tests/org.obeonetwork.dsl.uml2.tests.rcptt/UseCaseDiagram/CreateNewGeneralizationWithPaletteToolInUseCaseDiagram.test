--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _xUmjgA-GEeWqyPO4VW22gA,_MWdYgIBGEeS4X6G9cD21hw,_j5GvUAUgEeWu0eW6YYFvkg,_he-_gIBIEeS4X6G9cD21hw,_4eO8kBAeEeWa5c8q1ijOWg,_bKL_sH-PEeS4X6G9cD21hw,_X-rQgH-QEeS4X6G9cD21hw,_74q1YNMQEeSYFrQZGshlCQ,_iku_oNOXEeSYFrQZGshlCQ,_S65eENMVEeSYFrQZGshlCQ
Element-Name: CreateNewGeneralizationWithPaletteToolInUseCaseDiagram
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _mqBq8NOgEeSYFrQZGshlCQ
Runtime-Version: 1.5.5.201503020312
Save-Time: 5/29/15 10:10 AM
Testcase-Type: ecl
Verifications: _175yMNOjEeSYFrQZGshlCQ

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Create a new Generalization relationship between two Use Cases
Test: 
Create a New Generalization relationship between two UseCase
Create a New Generalization relationship between two Actors
try to create an Generalization between a use case and an actor

Result:
Generalization relationship between two UseCase is created
Generalization relationship between two Actors is created
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Create new Generalization between two UseCase
with [get-editor "NewModel Use Case Diagram"] {
    with [get-palette | get-palette-entry Generalization] {
        mouse-move 29 9 button1 -height 23 -width 146
        mouse-press 29 9 button1 -height 23 -width 146
        mouse-release 29 9 button1 524288 -height 23 -width 146
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram"] {
        with [get-edit-part -name UseCase2 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 97 21 button1 -height 47 -width 140
            mouse-press 97 21 button1 -height 47 -width 140
            mouse-release 97 21 button1 524288 -height 47 -width 140
        }
        with [get-edit-part -name UseCase1 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 71 18 button1 -height 47 -width 140
            mouse-press 71 18 button1 -height 47 -width 140
            mouse-release 71 18 button1 524288 -height 47 -width 140
        }
    }
}
//Check diagram
with [get-editor "NewModel Use Case Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" 
    | get-edit-part -name UseCase1 | get-target-connection 0] {
    get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputClosedArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals straight | verify-true
    //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}
// check model
with [get-editor "NewModel Use Case Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" 
    | get-edit-part -name UseCase1 | get-target-connection 0] {
    get-property "element.target.source.UseCase[0].name" | equals UseCase2 | verify-true
    get-property "element.target.target.UseCase[0].name" | equals UseCase1 | verify-true
}

// Create new Generalization between two Actors
with [get-editor "NewModel Use Case Diagram"] {
    with [get-palette] {
        with [get-palette-entry Generalization] {
            mouse-move 32 8 button1 -height 23 -width 146
            mouse-press 32 8 button1 -height 23 -width 146
            mouse-release 32 8 button1 524288 -height 23 -width 146
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram"] {
        with [get-edit-part -name Actor2 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 15 34 button1 -height 52 -width 30
            mouse-press 15 34 button1 -height 52 -width 30
            mouse-release 15 34 button1 524288 -height 52 -width 30
        }
        with [get-edit-part -name Actor1 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 21 23 button1 -height 52 -width 30
            mouse-press 21 23 button1 -height 52 -width 30
            mouse-release 21 23 button1 524288 -height 52 -width 30
        }
    }
}
// Check diagram
with [get-editor "NewModel Use Case Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" 
    | get-edit-part -name Actor1 | get-target-connection 0] {
    get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputClosedArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals straight | verify-true
    //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
}
// check model
with [get-editor "NewModel Use Case Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram" 
    | get-edit-part -name Actor1 | get-target-connection 0] {
    get-property "element.target.source.Actor[0].name" | equals Actor2 | verify-true
    get-property "element.target.target.Actor[0].name" | equals Actor1 | verify-true
}

// try to Create new Generalization between a UseCase and an actor
with [get-editor "NewModel Use Case Diagram"] {   
    with [get-palette | get-palette-entry Generalization] {
        mouse-move 35 13 button1 -height 23 -width 146
        mouse-press 35 13 button1 -height 23 -width 146
        mouse-release 35 13 button1 524288 -height 23 -width 146
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Use Case Diagram"] {
        with [get-edit-part -name UseCase2 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 69 31 button1 -height 47 -width 140
            mouse-press 69 31 button1 -height 47 -width 140
            mouse-release 69 31 button1 524288 -height 47 -width 140
        }
        with [get-edit-part -name Actor1 | get-edit-part -className WorkspaceImageEditPart] {
            mouse-move 13 15 button1 -height 52 -width 30
            mouse-press 13 15 button1 -height 52 -width 30
            mouse-release 13 15 button1 524288 -height 52 -width 30
        }
    }
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
