--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _xUmjgA-GEeWqyPO4VW22gA,_MWdYgIBGEeS4X6G9cD21hw,_j5GvUAUgEeWu0eW6YYFvkg,_he-_gIBIEeS4X6G9cD21hw,_4eO8kBAeEeWa5c8q1ijOWg,_bKL_sH-PEeS4X6G9cD21hw,_X-rQgH-QEeS4X6G9cD21hw,_XEsC0NRmEeSQYq5tjqphxg,_0gdt4NRyEeSda_OhYkGJCQ,_I8n8INSLEeSda_OhYkGJCQ,_C3JgYNa0EeScE-aTfGIfZQ
Element-Name: CreateNewUsageWithPaletteToolInComponentDiagram
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _WDAyUNSFEeSda_OhYkGJCQ
Runtime-Version: 1.5.5.201503020312
Save-Time: 6/9/15 11:53 AM
Testcase-Type: ecl
Verifications: _zAzIkNSLEeSda_OhYkGJCQ

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Open an empty component diagram, and create a Usage

Test:
- Create Usage with palette tool From component to Interface (not loliipop part)
- Try to create Usage with palette tool From component to Interface  (loliipop part)

Result:
Only first is created
- check diagram
- check model

TODO: Tests from Class
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Create Usage
with [get-editor "NewModel Component Diagram" | get-palette | get-palette-entry Usage] {
    mouse-move 38 17 button1 -height 23 -width 270
    mouse-press 38 17 button1 -height 23 -width 270
    mouse-release 38 17 button1 524288 -height 23 -width 270
}
// Select Usage source
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram" 
    | get-edit-part -name Component1 | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
    mouse-move 74 49 button1 -height 98 -width 118
    mouse-press 74 49 button1 -height 98 -width 118
    mouse-release 74 49 button1 524288 -height 98 -width 118
}
// Select Usage Target
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram" 
    | get-edit-part -name Interface1 | get-edit-part -className RotatableImageBasedOnFirstSourceConnectionEditPart] {
    mouse-move 14 17 button1 -height 30 -width 30
    mouse-press 14 17 button1 -height 30 -width 30
    mouse-release 14 17 button1 524288 -height 30 -width 30
}

// Check Diagram
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Component Diagram"] {
    with [get-edit-part -name Component1 | get-target-connection 0] {
        get-property "element.target.source.Component[0].name" | equals Component1 | verify-true
        get-property "element.target.target.Interface[0].name" | equals Interface1 | verify-true
        get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
        get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
        get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
        get-property "element.ownedStyle.targetArrow" | equals NoDecoration | verify-true
        get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
        get-property "element.ownedStyle.size" | equals 1 | verify-true
        get-property "element.ownedStyle.routingStyle" | equals straight | verify-true
        //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
        //get-property "element.ownedStyle.centerLabelStyle" | equals null | verify-true
        //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
        get-property "element.ownedStyle.centered" | equals None | verify-true
        get-property "element.sourceNode.name" | equals Interface1 | verify-true
        get-property "element.targetNode.name" | equals Component1 | verify-true
        get-property "getFigure().isVisible()" | equals true | verify-true
    }
}
// Check model
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Component Diagram" | get-edit-part -name Component1 | get-target-connection 0] {
    get-property "element.target.source.Component[0].name" | equals Component1 | verify-true
    get-property "element.target.target.Interface[0].name" | equals Interface1 | verify-true
}

// Try to create a Usage from Component to lollipop interface part (invalid)   
with [get-editor "NewModel Component Diagram"] {
    with [get-palette | get-palette-entry Usage] {
        mouse-move 60 8 button1 -height 23 -width 270
        mouse-press 60 8 button1 -height 23 -width 270
        mouse-release 60 8 button1 524288 -height 23 -width 270
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        with [get-edit-part -name Component1 | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartmentEditPart] {
            mouse-move 73 69 button1 -height 98 -width 118
            mouse-press 73 69 button1 -height 98 -width 118
            mouse-release 73 69 button1 524288 -height 98 -width 118
        }
       with [get-edit-part -name Interface1 -index 1 | get-edit-part -className BundledImageEditPart] {
            mouse-move 8 6 button1 -height 20 -width 20
            mouse-press 8 6 button1 -height 20 -width 20
            mouse-release 8 6 button1 524288 -height 20 -width 20
        }
    }
}
// Check model element not created
get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Component Diagram" | get-edit-part -name Component1 | verify-error{get-target-connection 1}

// Create new usage from a component port
with [get-editor "NewModel Component Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        mouse-move 79 37 -height 524 -width 657
        mouse-move 654 423 -height 524 -width 657
    }
    with [get-palette] {
        with [get-palette-entry Usage] {
            mouse-move 65 14 button1 -height 23 -width 270
            mouse-press 65 14 button1 -height 23 -width 270
            mouse-release 65 14 button1 524288 -height 23 -width 270
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        with [get-edit-part -name Component1 | get-edit-part -name port1 | get-edit-part 
            -className BundledImageEditPart] {
            mouse-move 5 9 button1 -height 20 -width 20
            mouse-press 5 9 button1 -height 20 -width 20
            mouse-release 5 9 button1 524288 -height 20 -width 20
        }
        with [get-edit-part -name Interface1 | get-edit-part 
            -className RotatableImageBasedOnFirstSourceConnectionEditPart] {
            mouse-move 9 12 button1 -height 30 -width 30
            mouse-press 9 12 button1 -height 30 -width 30
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        with [get-edit-part -name Interface1 | get-edit-part 
            -className RotatableImageBasedOnFirstSourceConnectionEditPart] {
            mouse-release 9 12 button1 524288 -height 30 -width 30
        }
    }
}
// Check Diagram
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram" 
    | get-edit-part -name Component1 | get-edit-part -name port1 | get-target-connection 0] {
    get-property "getFigure().isVisible()" | equals true | verify-true
}
// Check model
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram" 
    | get-edit-part -name Component1 | get-edit-part -name port1 | get-target-connection 0] {
    get-property "element.target.source.Component[0].name" | equals Component1 | verify-true
    get-property "element.target.source.Port[1].name" | equals port1 | verify-true
    get-property "element.target.target.Interface[0].name" | equals Interface1 | verify-true
}
 
// Try to create a Usage from Component to lollipop interface part (invalid)  
with [get-editor "NewModel Component Diagram"] {
    with [get-palette | get-palette-entry Usage] {
        mouse-move 44 12 button1 -height 23 -width 270
        mouse-press 44 12 button1 -height 23 -width 270
        mouse-release 44 12 button1 524288 -height 23 -width 270
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        with [get-edit-part -name Component1] {
            get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | mouse-move 117 85 -height 98 
                -width 118
            with [get-edit-part -name port1 | get-edit-part -className BundledImageEditPart] {
                mouse-move 8 10 button1 -height 20 -width 20
                mouse-press 8 10 button1 -height 20 -width 20
                mouse-release 8 10 button1 524288 -height 20 -width 20
            }
        }
        with [get-edit-part -name Interface1 -index 1 | get-edit-part -className BundledImageEditPart] {
            mouse-move 10 13 button1 -height 20 -width 20
            mouse-press 10 13 button1 -height 20 -width 20
            mouse-release 10 13 button1 524288 -height 20 -width 20
        }
    }
}
// Check Model
get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram" 
    | get-edit-part -name Component1 | get-edit-part -name port1 | verify-error{get-target-connection 1}

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
