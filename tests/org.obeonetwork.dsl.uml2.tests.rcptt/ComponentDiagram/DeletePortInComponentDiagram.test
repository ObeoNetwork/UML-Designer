--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _MWdYgIBGEeS4X6G9cD21hw,_he-_gIBIEeS4X6G9cD21hw,_bKL_sH-PEeS4X6G9cD21hw,_X-rQgH-QEeS4X6G9cD21hw,_XEsC0NRmEeSQYq5tjqphxg,_0gdt4NRyEeSda_OhYkGJCQ,_RrpfwNShEeSda_OhYkGJCQ,_C3JgYNa0EeScE-aTfGIfZQ,_TAnaINa7EeScE-aTfGIfZQ,_ByYYQNbWEeSrE7oyAIQ47g,_lpWfYPPREeSNxvhm9gIftQ
Element-Name: DeletePortInComponentDiagram
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _zVSAsPPNEeSNxvhm9gIftQ
Runtime-Version: 1.5.5.201503020312
Save-Time: 5/6/15 11:29 AM
Testcase-Type: ecl
Verifications: _WJH2QPPSEeSNxvhm9gIftQ

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Open test Project /component diagram which contain 2 components, to interfaces, interface realization, Usage and redefined links.

Test:
delete port

Result:
Port and connections are removed from diagram and model
- check diagram
- check model
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Delete Port
with [get-editor "NewModel Component Diagram"] {
    with [get-diagram -index 1 | get-edit-part -name "NewModel Component Diagram"] {
        with [get-edit-part -name Component1] {
            with [get-edit-part -name port1 | get-edit-part -className BundledImageEditPart] {
                mouse-move 12 6 button1 -height 20 -width 20
                mouse-press 12 6 button1 -height 20 -width 20
                mouse-release 12 6 button1 524288 -height 20 -width 20
            }
        }
    }
    get-button "Delete from Model" | click
}
//Check Diagram
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Component Diagram"] {
    get-edit-part -name Component1 | verify-error{get-edit-part -name port1}
    get-edit-part -name Component2 | get-edit-part -name port1 | get-edit-part -className BundledImageEditPart 
        | get-figure 0 | get-property "isVisible()" | equals true | verify-true
    get-property "element.edges.size" | equals 0 | verify-true
    get-property "children.size" | equals 6 | verify-true
    get-property "element.nodes.size" | equals 5 | verify-true
    get-property "element.nodes.DNode[0].name" | equals port1 | verify-true
    get-property "element.nodes.DNode[1].name" | equals Interface1 | verify-true
    get-property "element.nodes.DNode[2].name" | equals Interface2 | verify-true
    get-property "element.nodes.DNode[3].name" | equals Interface1 | verify-true
    get-property "element.nodes.DNode[4].name" | equals Interface2 | verify-true
}
// Check Model
with [get-editor "NewModel Component Diagram" | get-diagram -index 1 | get-edit-part 
    -name "NewModel Component Diagram"] {
    get-property "element.target.member.size" | equals 4 | verify-true
    get-property "element.target.member.Component[0].name" | equals Component1 | verify-true
    get-property "element.target.member.Component[0].ownedMember.size" | equals 0 | verify-true
    get-property "element.target.member.Component[1].name" | equals Component2 | verify-true
    get-property "element.target.member.Component[1].member.size" | equals 1 | verify-true
    get-property "element.target.member.Component[1].member.Port[0].name" | equals port1 | verify-true
    get-property "element.target.member.Interface[2].name" | equals Interface1 | verify-true
    get-property "element.target.member.Interface[3].name" | equals Interface2 | verify-true
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
