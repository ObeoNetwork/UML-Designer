--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _MWdYgIBGEeS4X6G9cD21hw,_j5GvUAUgEeWu0eW6YYFvkg,_he-_gIBIEeS4X6G9cD21hw,_X-rQgH-QEeS4X6G9cD21hw,_w18PUNz2EeS8j822Nc50oQ,_--8QENhxEeSGfIdQZmgChQ,_t-4bcN0eEeS8j822Nc50oQ
Element-Name: CreateNewControlFlowWithPaletteToolInActivityDiagram
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _D14oMH-OEeS4X6G9cD21hw
Runtime-Version: 1.5.5.201503020312
Save-Time: 5/28/15 6:22 PM
Testcase-Type: ecl
Verifications: _FgzQ0N0jEeS8j822Nc50oQ

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Create control flows between nodes

Test:
In an activity diagram which contain three opaque actions and a decision node
	- create a control flow from opaque action to node
	- create a flow from node to an opaque action

Result:
- connetions are created
- check Diagram
- check model
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Create control flow between OpaqueAction1 and Decision1
with [get-editor "NewModel Activity Diagram"] {
    with [get-palette | get-palette-entry "Control Flow"] {
        mouse-move 64 9 button1 -height 24 -width 125
        mouse-press 64 9 button1 -height 24 -width 125
        mouse-release 64 10 button1 524288 -height 24 -width 125
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
       with [get-edit-part -name "OpaqueAction1\n\n"
            + "// TODO body of OpaqueAction1" | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            mouse-move 139 38 button1 -height 68 -width 162
            mouse-press 139 38 button1 -height 68 -width 162
            mouse-release 139 38 button1 524288 -height 68 -width 162
        }
        with [get-edit-part -name "Decision1" | get-edit-part -className LozengeEditPart] {
            mouse-move 16 12 button1 -height 30 -width 30
            mouse-press 16 12 button1 -height 30 -width 30
            mouse-release 16 12 button1 524288 -height 30 -width 30
        }
    }
}
// Check Diagram
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "Decision1" | get-target-connection 0] {
    get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals manhattan | verify-true
    //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
    get-edit-part -className "" | get-property "getFigure().getText()" | equals "" | verify-true
}
// Check Model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "Decision1" | get-target-connection 0] {
    get-property "element.sourceNode.target.name" | equals OpaqueAction1 | verify-true
    get-property "element.targetNode.target.name" | equals Decision1 | verify-true
}

// Create control flow between DecisionNode1 and OpaqueAction2
with [get-editor "NewModel Activity Diagram"] {
    with [get-palette | get-palette-entry "Control Flow"] {
        mouse-move 69 12 button1 -height 24 -width 125
        mouse-press 69 12 button1 -height 24 -width 125
        mouse-release 69 12 button1 524288 -height 24 -width 125
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
        with [get-edit-part -name "Decision1" | get-edit-part -className LozengeEditPart] {
            mouse-move 11 15 button1 -height 30 -width 30
            mouse-press 11 15 button1 -height 30 -width 30
            mouse-release 11 16 button1 524288 -height 30 -width 30
        }
        with [get-edit-part -name "OpaqueAction2\n\n"
            + "// TODO body of OpaqueAction2" | get-edit-part 
            -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            mouse-move 142 19 button1 -height 68 -width 162
            mouse-press 142 19 button1 -height 68 -width 162
            mouse-release 142 19 button1 524288 -height 68 -width 162
        }
    }
}
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "OpaqueAction2\n\n"
            + "// TODO body of OpaqueAction2" | get-target-connection 0] {
    get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals manhattan | verify-true
    //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
    get-edit-part -className "" | get-property "getFigure().getText()" | equals "" | verify-true
}
// Check Model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "OpaqueAction2\n\n"
            + "// TODO body of OpaqueAction2" | get-target-connection 0] {
    get-property "element.sourceNode.target.name" | equals Decision1 | verify-true
    get-property "element.targetNode.target.name" | equals OpaqueAction2 | verify-true
}

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
