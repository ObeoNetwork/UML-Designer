--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _xUmjgA-GEeWqyPO4VW22gA,_MWdYgIBGEeS4X6G9cD21hw,_j5GvUAUgEeWu0eW6YYFvkg,_he-_gIBIEeS4X6G9cD21hw,_4eO8kBAeEeWa5c8q1ijOWg,_bKL_sH-PEeS4X6G9cD21hw,_X-rQgH-QEeS4X6G9cD21hw,_w18PUNz2EeS8j822Nc50oQ,_--8QENhxEeSGfIdQZmgChQ,_n-0AIN0CEeS8j822Nc50oQ
Element-Name: CreateNewObjectFlowsWithPaletteToolInActivityDiagram
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _OzZEcJaAEeSnkN__j1IQWA
Runtime-Version: 1.5.5.201503020312
Save-Time: 6/8/15 5:56 PM
Tags: skipExecution
Testcase-Type: ecl
Verifications: _IcJ_IJaMEeSTQJ5Qk_tNWg

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Test:
Create object flows
From Activity Parameter to
	- an opaque action input pin
	- an opaque action output pin (invalid)
	- datastore
	- an opaque action body (invalid)

From an opaque action input pin to:
	- an opaque action input pin
	- an opaque action output pin
	- a datastore
	- a parameter
	- a parameter already conectedto an output pin

From an opaque action output pin to:
	- a parameter already
	- an opaque action input pin
	- a datastore

From a datastore to:
	- an opaque action input pin






Result:
Object flows exist in semantic model
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Create object flows
with [get-editor "NewModel Activity Diagram"] {
    get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | mouse-move 1102 374 -height 530 -width 1116
    with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }
    
    // Create object flow from Parameter1 to OpaqueAction1 Input_0
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {
        with [get-edit-part -name NewModel] {
            with [get-edit-part -name "Parameter1 : " | get-edit-part -className SquareEditPart] {
                mouse-move 16 11 button1 -height 20 -width 20
                mouse-press 16 11 button1 -height 20 -width 20
                mouse-release 6 11 button1 786432 -height 20 -width 20
            }
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
                | get-edit-part -name "OpaqueAction1\n\n" + "// TODO body of OpaqueAction1" 
                | get-edit-part -name "Input_0 : [1]" | get-edit-part 
                -className SquareEditPart] {
                mouse-move 13 6 button1 -height 20 -width 20
                mouse-press 13 6 button1 -height 20 -width 20
                mouse-release 13 6 button1 786432 -height 20 -width 20
            }
        }
    }
}
// Check diagram and model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "OpaqueAction1\r\n"
    + "\r\n"
    + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 0] {
    get-property "element.name" | equals "" | verify-true
    get-property "element.ownedStyle.customFeatures" | equals "[]" | verify-true
    get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
    get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    get-property "element.ownedStyle.foldingStyle" | equals NONE | verify-true
    get-property "element.ownedStyle.size" | equals 1 | verify-true
    get-property "element.ownedStyle.routingStyle" | equals manhattan | verify-true
    //get-property "element.ownedStyle.beginLabelStyle" | equals null | verify-true
    //get-property "element.ownedStyle.endLabelStyle" | equals null | verify-true
    get-property "element.ownedStyle.centered" | equals None | verify-true
    get-property "element.sourceNode.name" | equals "Parameter1 :" | verify-true
    get-property "element.targetNode.name" | equals "Input_0 : [1]" | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}

// Create object flow from Parameter1 to DataStore1
with [get-editor "NewModel Activity Diagram"] {
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel] {
        with [get-edit-part -name "Parameter1 : " | get-edit-part -className SquareEditPart] {
            mouse-move 5 6 button1 -height 20 -width 20
            mouse-press 5 6 button1 -height 20 -width 20
            mouse-release 1 6 button1 786432 -height 20 -width 20
        }
        with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
            with [get-edit-part -name "«Datastore»\n"
                + "DataStore1" | get-edit-part -className DNodeContainerViewNodeContainerCompartment2EditPart] {
                mouse-move 73 38 button1 -height 68 -width 148
                mouse-press 73 38 button1 -height 68 -width 148
                mouse-release 73 38 button1 786432 -height 68 -width 148
            }
        }
    }
}
// Check diagram and model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "«Datastore»\r\n"
    + "DataStore1" | get-target-connection 0] {
    get-property "element.sourceNode.name" | equals "Parameter1 :" | verify-true
    get-property "element.targetNode.name" | equals "«Datastore»\n"
        + "DataStore1" | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}

// Create object flow from OpaqueAction1 Output_0 to Parameter2       
with [get-editor "NewModel Activity Diagram"] { 
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }   
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {    
        with [get-edit-part -name NewModel] {
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part 
                -name "OpaqueAction1\n\n"
                + "// TODO body of OpaqueAction1"] {
                with [get-edit-part -name "Output_0 : [1]" | get-edit-part -className SquareEditPart] {
                    mouse-move 12 3 button1 -height 20 -width 20
                    mouse-press 12 3 button1 -height 20 -width 20
                    mouse-release 12 3 button1 786432 -height 20 -width 20
                }
            }
        }
        with [get-edit-part -name NewModel] {
            with [get-edit-part -name "Parameter2 : " | get-edit-part -className SquareEditPart] {
                mouse-move 14 8 button1 -height 20 -width 20
                mouse-press 14 8 button1 -height 20 -width 20
                mouse-release 14 8 button1 786432 -height 20 -width 20
            }
        }
    }
}
// Check diagram and model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -name "Parameter2 : " | get-target-connection 0] {
    get-property "element.sourceNode.name" | equals "Output_0 : [1]" | verify-true
    get-property "element.targetNode.name" | equals "Parameter2 :" | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}

// Create object flow from OpaqueAction1 Output_0 to OpaqueAction2 Input_0 
with [get-editor "NewModel Activity Diagram"] { 
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }   
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel] {
        with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
            with [get-edit-part -name "OpaqueAction1\n\n"
                + "// TODO body of OpaqueAction1" | get-edit-part -name "Output_0 : [1]" | get-edit-part 
                -className SquareEditPart] {
                mouse-move 8 12 button1 -height 20 -width 20
                mouse-press 8 12 button1 -height 20 -width 20
                mouse-release 8 12 button1 786432 -height 20 -width 20
            }
            with [get-edit-part -name "OpaqueAction2\n\n"
                + "// TODO body of OpaqueAction2"] {
                with [get-edit-part -name "Input_0 : [1]" | get-edit-part -className SquareEditPart] {
                    mouse-move 9 4 button1 -height 20 -width 20
                    mouse-press 9 4 button1 -height 20 -width 20
                    mouse-release 9 4 button1 786432 -height 20 -width 20
                }
            }
        }
    }
}
// Check diagram and model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "OpaqueAction2\r\n"
    + "\r\n"
    + "// TODO body of OpaqueAction2" | get-edit-part -name "Input_0 : [1]" | get-target-connection 0] {
    get-property "element.sourceNode.name" | equals "Output_0 : [1]" | verify-true
    get-property "element.targetNode.name" | equals "Input_0 : [1]" | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}

// Create object flow from OpaqueAction1 Output_0 to Datastore
with [get-editor "NewModel Activity Diagram"] {   
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    } 
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
        with [get-edit-part -name "OpaqueAction1\n\n"
            + "// TODO body of OpaqueAction1" | get-edit-part -name "Output_0 : [1]" | get-edit-part 
            -className SquareEditPart] {
            mouse-move 7 5 button1 -height 20 -width 20
            mouse-press 7 5 button1 -height 20 -width 20
            mouse-release 7 5 button1 786432 -height 20 -width 20
        }
        with [get-edit-part -name "«Datastore»\n"
            + "DataStore1" | get-edit-part -className DNodeContainerViewNodeContainerCompartment2EditPart] {
            mouse-move 101 34 button1 -height 68 -width 148
            mouse-press 101 34 button1 -height 68 -width 148
            mouse-release 101 34 button1 786432 -height 68 -width 148
        }
    }
}
// Check diagram and model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "«Datastore»\r\n"
    + "DataStore1" | get-target-connection 1] {
    get-property "element.sourceNode.name" | equals "Output_0 : [1]" | verify-true
    get-property "element.targetNode.name" | equals "«Datastore»\n"
        + "DataStore1" | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}

// Create object flow from Datastore to OpaqueAction1 Input_0
with [get-editor "NewModel Activity Diagram"] { 
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }   
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
        with [get-edit-part -name "«Datastore»\n"
            + "DataStore1"] {
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartment2EditPart] {
                mouse-move 122 48 button1 -height 68 -width 148
                mouse-press 122 48 button1 -height 68 -width 148
                mouse-release 122 48 button1 -height 68 -width 148
            }
        }
        with [get-edit-part -name "OpaqueAction1\n\n"
            + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-edit-part 
            -className SquareEditPart] {
            mouse-move 14 13 button1 -height 20 -width 20
            mouse-press 14 13 button1 -height 20 -width 20
            mouse-release 13 13 button1 786432 -height 20 -width 20
        }
    }
}
// Check diagram and model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" 
    | get-edit-part -name NewModel | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart 
    | get-edit-part -name "OpaqueAction1\r\n"
    + "\r\n"
    + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-target-connection 1] {
    get-property "element.sourceNode.name" | equals "«Datastore»\n"
        + "DataStore1" | verify-true
    get-property "element.targetNode.name" | equals "Input_0 : [1]" | verify-true
    get-property "getFigure().isVisible()" | equals true | verify-true
}

// Invalid Cases
// Try to create From Parameter1 to OpaqueAction1 Ouput_0 (invalid)   
with [get-editor "NewModel Activity Diagram"] {  
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }  
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel] {
        with [get-edit-part -name "Parameter1 : " | get-edit-part -className SquareEditPart] {
            mouse-move 9 5 button1 -height 20 -width 20
            mouse-press 9 5 button1 -height 20 -width 20
            mouse-release 9 5 button1 786432 -height 20 -width 20
        }
        with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart | get-edit-part 
            -name "OpaqueAction1\n\n"
            + "// TODO body of OpaqueAction1"] {
            with [get-edit-part -name "Output_0 : [1]" | get-edit-part -className SquareEditPart] {
                mouse-move 13 3 button1 -height 20 -width 20
                mouse-press 13 3 button1 -height 20 -width 20
                mouse-release 13 4 button1 786432 -height 20 -width 20
            }
        }
    }
    key-type ESC
}
// Try to create object flow from Parameter1 to OpaqueAction1 (invalid)
with [get-editor "NewModel Activity Diagram"] {   
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    } 
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {
        with [get-edit-part -name NewModel] {
            with [get-edit-part -name "Parameter1 : " | get-edit-part -className SquareEditPart] {
                mouse-move 11 7 button1 -height 20 -width 20
                mouse-press 11 7 button1 -height 20 -width 20
                mouse-release 3 7 button1 786432 -height 20 -width 20
            }
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
                with [get-edit-part -name "OpaqueAction1\n\n"
                    + "// TODO body of OpaqueAction1" | get-edit-part 
                    -className DNodeContainerViewNodeContainerCompartment2EditPart] {
                    mouse-move 18 31 button1 -height 68 -width 162
                    mouse-press 18 31 button1 -height 68 -width 162
                    mouse-release 18 31 button1 786432 -height 68 -width 162
                }
            }
        }
    }
    key-type ESC
}        
// Try to create object flow from OpaqueAction1 Input_0 to OpaqueAction2 Input_0 (invalid)
with [get-editor "NewModel Activity Diagram"] {
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {
        with [get-edit-part -name NewModel] {
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
                with [get-edit-part -name "OpaqueAction1\n\n"
                    + "// TODO body of OpaqueAction1"] {
                    with [get-edit-part -name "Input_0 : [1]" | get-edit-part -className SquareEditPart] {
                        mouse-move 11 4 button1 -height 20 -width 20
                        mouse-press 11 4 button1 -height 20 -width 20
                        mouse-release 11 4 button1 786432 -height 20 -width 20
                    }
                }
                with [get-edit-part -name "OpaqueAction2\n\n"
                    + "// TODO body of OpaqueAction2"] {
                    with [get-edit-part -name "Input_0 : [1]" | get-edit-part -className SquareEditPart] {
                        mouse-move 10 7 button1 -height 20 -width 20
                        mouse-press 10 7 button1 -height 20 -width 20
                        mouse-release 10 7 button1 786432 -height 20 -width 20
                    }
                }
            }
        }
    }
    key-type ESC
}
// Try to create object flow from OpaqueAction1 Input_0 to OpaqueAction2 Output_0 (invalid)
with [get-editor "NewModel Activity Diagram"] { 
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }   
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {
        with [get-edit-part -name NewModel] {
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
                with [get-edit-part -name "OpaqueAction1\n\n"
                    + "// TODO body of OpaqueAction1" | get-edit-part -name "Input_0 : [1]" | get-edit-part 
                    -className SquareEditPart] {
                    mouse-move 7 5 button1 -height 20 -width 20
                    mouse-press 7 5 button1 -height 20 -width 20
                    mouse-release 7 5 button1 786432 -height 20 -width 20
                }
                with [get-edit-part -name "OpaqueAction2\n\n"
                    + "// TODO body of OpaqueAction2"] {
                    with [get-edit-part -name "Output_0 : [1]" | get-edit-part -className SquareEditPart] {
                        mouse-move 11 11 button1 -height 20 -width 20
                        mouse-press 11 11 button1 -height 20 -width 20
                        mouse-release 11 11 button1 786432 -height 20 -width 20
                    }
                }
            }
        }
    }
    key-type ESC
}
// Try to create object flow from OpaqueAction1 Input_0 to Parameter2 (invalid)            
with [get-editor "NewModel Activity Diagram"] {    
with [get-palette] {
        with [get-palette-entry "Object Flow"] {
            mouse-move 95 7 button1 -height 24 -width 145
            mouse-press 95 7 button1 -height 24 -width 145
            mouse-release 93 7 button1 524288 -height 24 -width 145
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {
        with [get-edit-part -name NewModel] {
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
                with [get-edit-part -name "OpaqueAction1\n\n"
                    + "// TODO body of OpaqueAction1"] {
                    with [get-edit-part -name "Input_0 : [1]" | get-edit-part -className SquareEditPart] {
                        mouse-move 7 5 button1 -height 20 -width 20
                        mouse-press 7 5 button1 -height 20 -width 20
                        mouse-release 7 5 button1 786432 -height 20 -width 20
                    }
                }
            }
        }     
        with [get-edit-part -name NewModel] {
            with [get-edit-part -name "Parameter2 : " | get-edit-part -className SquareEditPart] {
                mouse-move 9 9 button1 -height 20 -width 20
                mouse-press 9 9 button1 -height 20 -width 20
                mouse-release 9 9 button1 786432 -height 20 -width 20
            }
        }
    }
    key-type ESC
}
// Try to create object flow from OpaqueAction1 Input_0 to Datastore (invalid)
with [get-editor "NewModel Activity Diagram"] {    
    with [get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram" | get-edit-part -name NewModel 
        | get-edit-part -className DNodeContainerViewNodeContainerCompartmentEditPart] {
        with [get-edit-part -name "OpaqueAction1\n\n"
            + "// TODO body of OpaqueAction1"] {
            with [get-edit-part -name "Input_0 : [1]" | get-edit-part -className SquareEditPart] {
                mouse-move 12 8 button1 -height 20 -width 20
                mouse-press 12 8 button1 -height 20 -width 20
                mouse-release 12 8 button1 786432 -height 20 -width 20
            }
        }
          with [get-edit-part -name "«Datastore»\n"
            + "DataStore1"] {
            with [get-edit-part -className DNodeContainerViewNodeContainerCompartment2EditPart] {
                mouse-move 129 46 button1 -height 68 -width 148
                mouse-press 129 46 button1 -height 68 -width 148
                mouse-release 129 46 button1 786432 -height 68 -width 148
            }
        }
    }
    key-type ESC
}

// Check model
with [get-editor "NewModel Activity Diagram" | get-diagram -index 1 | get-edit-part -name "NewModel Activity Diagram"] {
    get-property "element.target.name" | equals NewModel | verify-true
    get-property "element.target.edge.size" | equals 6 | verify-true
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
