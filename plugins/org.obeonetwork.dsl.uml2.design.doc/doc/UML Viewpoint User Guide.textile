
__(c) Obeo 2011 -  All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0__


h1. Getting Started


h1. Features


h2. Class Diagram

h3. Support for Broken Associations


It might happen that for some reason you have an *Association* instance in your package which doesn't have the proper *ends*. In that case
the class diagram will show the broken associations as nodes :

!features/class_pics/broken association.JPG!

You can use the *Association* tools in the palette __(Association, Composition and Aggregation)__ to re-attach the Association to a classifier.

h3. Related Classes/Interface filtering and highlighting

You have two ways to highlight classes related to one given class. The first one is to activate the *Related filter* on the *Class Diagram*. It will hide elements (*Class*, *interface*, *Association*, ...) that are not related to the class you selected (context). The second way can be achive by using the *Related Classes Diagram*. This diagram will show all elements related to the selected class.

Lets use an instance to visualize the result of each methods. Consider the following model :

!features/class_pics/related classes/Related_classes_package.JPG!

By opening the *Class Diagram* on package1 you get the following diagram :

!features/class_pics/related classes/package_1_not_filtered.JPG!

You can then apply the filter on ContextClass :

!features/class_pics/related classes/activate_filter_on_ContextClass.JPG!

The resulting diagram will be as follow :

!features/class_pics/related classes/package_1_filtered_on_ContextClass.JPG!

Notice that only classes present in the initial diagram are present. If you want all classes related to ContextClass you should open the *Related Classes Diagram* on the ContextClass :

!features/class_pics/related classes/ContextClass_related_classes.JPG!

h2. Component Diagram


h3. Connector

You can link two ports using assembly or delegation connectors.

Assembly Connector :

!features/component_pics/assembly connector.JPG!

Delegation Connector :

!features/component_pics/delegation connector.JPG!

h3. Composite Components

!features/component_pics/composite components.JPG!

h3. Using Class

As a component :

!features/component_pics/class as component.JPG!

In a component :

!features/component_pics/implementation classes in component.JPG!


h3. Required and Provided Interfaces

Using ports :

!features/component_pics/exchange through ports.JPG!

Or directy on the components :

!features/component_pics/exchange through component.JPG!

h3. Package imports

!features/component_pics/package imports.JPG!